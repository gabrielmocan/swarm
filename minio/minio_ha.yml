version: "3.9"

######################################################## BASE TEMPLATES ########################################################

x-minio-template: &minio-template
  image: minio/minio:RELEASE.2022-12-12T19-27-27Z
  healthcheck:
    test: curl -f http://localhost:9000/minio/health/live || exit 1
  networks:
    - minio-network
  environment:
    MINIO_ROOT_USER: ${ACCESS_KEY?Variable not set}     # This is equivalent to ACCESS_KEY, can also be set by secret "access_key"
    MINIO_ROOT_PASSWORD: ${SECRET_KEY?Variable not set} # This is equivalent to SECRET_KEY, can also be set by secret "secret_key"
    MINIO_DISTRIBUTED_MODE_ENABLED: "yes"
    MINIO_DISTRIBUTED_NODES: minio{1...3}
  command: server http://minio{1...3}/export --console-address ":9001"

x-haproxy-envs: &haproxy-envs
  HAPROXY_MAXCONN: 100
  HAPROXY_MODE: tcp
  HAPROXY_RETRIES: 3
  HAPROXY_TIMEOUT_CONNECT: 3s
  HAPROXY_TIMEOUT_CHECK: 5s
  HAPROXY_TIMEOUT_CLIENT: 1m
  HAPROXY_TIMEOUT_SERVER: 1m

######################################################## DEPLOYMENT RULES ########################################################
# Node deployment is controlled by hostname, but one can change this constraint to meet scenario needs

# 1st node deploy template
x-deploy_node01: &deploy_node01
  deploy:
    placement:
      constraints:
        - node.hostname==${MINIO_HOSTNAME_01?Undefined variable}

# 2nd node deploy template
x-deploy_node02: &deploy_node02
  deploy:
    placement:
      constraints:
        - node.hostname==${MINIO_HOSTNAME_02?Undefined variable}

# 3rd node deploy template
x-deploy_node03: &deploy_node03
  deploy:
    placement:
      constraints:
        - node.hostname==${MINIO_HOSTNAME_03?Undefined variable}

############################################################ SERVICES ############################################################

services:
  # Globally deployed HAproxy will ensure high availability to services
  haproxy-minio-dashboard:
    image: gabemocan/swarm:haproxy-2.7.1
    environment:
      <<: *haproxy-envs
      HAPROXY_LISTEN_PORT: 9001
      HAPROXY_APP_NAME: minio-dashboard
      HAPROXY_BACKEND_NODES: minio1:9001,minio2:9001,minio3:9001
    networks:
      - minio-network
      - caddy
    deploy:
      mode: global
      update_config:
        failure_action: rollback
        order: start-first
      labels:
        # This will enable dashboard access through HTTPS. e.g: https://minio.example.com
        caddy: minio.${DOMAIN?Variable not set}
        caddy.reverse_proxy: "{{upstreams 9001}}"

  haproxy-minio-api:
    image: gabemocan/swarm:haproxy-2.7.1
    environment:
      <<: *haproxy-envs
      HAPROXY_LISTEN_PORT: 9000
      HAPROXY_APP_NAME: minio-api
      HAPROXY_BACKEND_NODES: minio1:9000,minio2:9000,minio3:9000
    networks:
      - minio-network
      - caddy
    deploy:
      mode: global
      update_config:
        failure_action: rollback
        order: start-first
      labels:
        # This will enable API access through HTTPS. e.g: https://s3.example.com
        caddy: s3.${DOMAIN?Variable not set}
        caddy.reverse_proxy: "{{upstreams 9000}}"

  minio1:
    <<: *minio-template
    <<: *deploy_node01
    hostname: minio1
    volumes:
      - minio_1_data:/export

  minio2:
    <<: *minio-template
    <<: *deploy_node02
    hostname: minio2
    volumes:
      - minio_2_data:/export

  minio3:
    <<: *minio-template
    <<: *deploy_node03
    hostname: minio3
    volumes:
      - minio_3_data:/export

networks:
  minio-network:
  caddy:
    external: true

volumes:
  minio_1_data:
  minio_2_data:
  minio_3_data:
